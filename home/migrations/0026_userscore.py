# Generated by Django 4.2.9 on 2025-02-24 12:25

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('home', '0025_remove_room_score_remove_roomparticipant_score_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserScore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('total_questions', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('questions_attempted', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('correct_answers', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('wrong_answers', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('accuracy_percentage', models.DecimalField(decimal_places=2, default=0.0, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('completion_time', models.DurationField(blank=True, help_text='Time taken to complete the level', null=True)),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_scores', to='home.event')),
                ('level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_scores', to='home.levels')),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_scores', to='home.room')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scores', to='home.userprofile')),
            ],
            options={
                'verbose_name': 'User Score',
                'verbose_name_plural': 'User Scores',
                'ordering': ['-created_at'],
                'unique_together': {('user', 'event', 'level', 'room')},
            },
        ),
    ]
