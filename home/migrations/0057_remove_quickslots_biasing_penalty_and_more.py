# Generated by Django 4.2.9 on 2025-03-10 16:32

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('home', '0056_quickslots'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='quickslots',
            name='biasing_penalty',
        ),
        migrations.RemoveField(
            model_name='quickslots',
            name='deviation_threshold',
        ),
        migrations.RemoveField(
            model_name='quickslots',
            name='slot_participants',
        ),
        migrations.RemoveField(
            model_name='quickslots',
            name='slot_ranking',
        ),
        migrations.RemoveField(
            model_name='quickslots',
            name='total_ranking',
        ),
        migrations.CreateModel(
            name='QuickSlotsGroups',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_rankings', models.PositiveIntegerField(default=3, help_text='Total number of ranking positions', validators=[django.core.validators.MinValueValidator(1)])),
                ('biasing_penalty', models.DecimalField(decimal_places=1, default=2.0, help_text='Penalty for biased voting behavior', max_digits=5)),
                ('deviation_threshold', models.DecimalField(decimal_places=1, default=2.0, help_text='Threshold for acceptable deviation in votes', max_digits=5)),
                ('room_status', models.CharField(choices=[('opened', 'Opened'), ('closed', 'Closed')], default='closed', max_length=10, verbose_name='Room Status')),
                ('start_status', models.CharField(choices=[('start', 'Start'), ('pause', 'Pause'), ('end', 'End')], default='pause', max_length=10, verbose_name='Start Status')),
                ('filled_capacity', models.PositiveIntegerField(default=0, help_text='Number of participants currently in this group', validators=[django.core.validators.MinValueValidator(0)])),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quick_slot_groups', to='home.event', verbose_name='Event')),
                ('level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quick_slot_groups', to='home.levels', verbose_name='Level')),
                ('quick_slot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='groups', to='home.quickslots', verbose_name='Quick Slot')),
                ('quick_slot_participants', models.ManyToManyField(blank=True, related_name='quick_slot_group_participations', to='home.userprofile', verbose_name='Quick Slot Participants')),
                ('topic', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='quick_slot_groups', to='home.topic', verbose_name='Topic')),
            ],
            options={
                'verbose_name': 'Quick Slot Group',
                'verbose_name_plural': 'Quick Slot Groups',
                'ordering': ['quick_slot', 'created_at'],
                'unique_together': {('quick_slot', 'event', 'level')},
            },
        ),
    ]
